version: 2

defaults: &defaults
  working_directory: /go/src/github.com/tendermint/tendermint
  docker:
    - image: circleci/golang:1.10
  environment:
    GOBIN: /go/src/github.com/tendermint/tendermint/.bin
  
jobs:
  setup_dependencies:
    <<: *defaults
    steps:
      - run: env
      - checkout
      - run: mkdir .bin
      - restore_cache:
          keys:
            - v1-bin-cache
            - v1-pkg-cache
      - run: ls -lah /go/src/github.com/tendermint/tendermint/.bin
      - run:
          name: Get tools
          command: make get_tools
      - run:
          name: Get dependencies
          command: make get_vendor_deps
      - save_cache:
          key: v1-bin-cache
          paths:
            - /go/src/github.com/tendermint/tendermint/.bin
      - save_cache:
          key: v1-pkg-cache
          paths:
            - /go/pkg
      - save_cache:
          key: tree-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /go/src/github.com/tendermint/tendermint

  setup_profile_workspace:
    <<: *defaults
    steps:
      - run: mkdir -p profiles
      - run: touch profiles/.keep
      - persist_to_workspace:
          root: profiles
          paths:
            - .keep

  lint:
    <<: *defaults
    steps:
      - restore_cache:
          key: v1-bin-cache
      - restore_cache:
          key: v1-pkg-cache
      - restore_cache:
          key: tree-{{ .Environment.CIRCLE_SHA1 }}
      - run: ls /go/src/github.com/tendermint/tendermint/.bin
      - run:
          name: Metalinter
          command: make metalinter

  test_cover:
    <<: *defaults
    parallelism: 4
    steps:
      - attach_workspace:
          at: profiles
      - restore_cache:
          key: v1-pkg-cache
      - restore_cache:
          key: tree-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run tests
          command: |
            for pkg in $(go list github.com/tendermint/tendermint/... | grep -v /vendor/ | circleci tests split); do
              id=$(basename "$pkg")

              go test -timeout 5m -race -coverprofile=profiles/$id.out -covermode=atomic "$pkg"
            done
      - persist_to_workspace:
          root: profiles
          paths:
            - "*.out"

  upload_coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: profiles
      - restore_cache:
          key: tree-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Combine profiles
          command: |
            set -ex

            echo "mode: atomic" > coverage.txt
            for prof in $(ls profiles/); do
              tail -n +2 profiles/"$prof" >> coverage.txt
            done
      - run:
          name: Upload coverage
          command: bash <(curl -s https://codecov.io/bash) -f coverage.txt

workflows:
  version: 2
  test-cover:
    jobs:
      - setup_dependencies
      - setup_profile_workspace
      - lint:
          requires:
            - setup_dependencies
      - test_cover:
          requires:
            - setup_dependencies
            - setup_profile_workspace
      - upload_coverage:
          requires:
            - test_cover
